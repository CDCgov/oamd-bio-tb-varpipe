nextflow_process {
    name "Test Process VARPIPE_BWAMEM"
    script "../main.nf"
    process "VARPIPE_BWAMEM"

    tag "modules"
    tag "modules_phcore"
    tag "bwa/index"
    tag "varpipe"
    tag "varpipe/bwamem"

    setup {
        run("BWA_INDEX") {
            script "../../../bwa/index/main.nf"
            process {
                """
                input[0] = [
                    [id: 'test'],
                    file(params.modules_testdata_base_path + '/genomics/tuberculosis/genome/reference-index/ref2.fa', checkIfExists: true)
                ]
                """
            }
        }
    }

    test("BWA mem") {
        when {
            process {
                """
                // Prepare reads input
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    [
                        file(params.modules_testdata_base_path + '/genomics/tuberculosis/fastqs/test_1.fastq.gz'),
                        file(params.modules_testdata_base_path + '/genomics/tuberculosis/fastqs/test_2.fastq.gz')
                    ]
                ]

                input[1] = BWA_INDEX.out.index
                    .join(
                        Channel.of([
                        [ id:'index' ],
                        file(params.modules_testdata_base_path + '/genomics/tuberculosis/genome/reference-index/ref2.dict', checkIfExists: true),
                        file(params.modules_testdata_base_path + '/genomics/tuberculosis/genome/reference-index/ref2.fa.fai', checkIfExists: true),
                        file(params.modules_testdata_base_path + '/genomics/tuberculosis/genome/reference-index/ref2.fa', checkIfExists: true)
                    ]))
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }


    test("BWA mem -stub") {

        options "-stub"

        when {
            process {
                """
                // Prepare reads input
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    [
                        file(params.modules_testdata_base_path + '/genomics/tuberculosis/fastqs/test_1.fastq.gz'),
                        file(params.modules_testdata_base_path + '/genomics/tuberculosis/fastqs/test_2.fastq.gz')
                    ]
                ]

                input[1] = BWA_INDEX.out.index
                    .join(
                        Channel.of([
                        [ id:'index' ],
                        file(params.modules_testdata_base_path + '/genomics/tuberculosis/genome/reference-index/ref2.dict', checkIfExists: true),
                        file(params.modules_testdata_base_path + '/genomics/tuberculosis/genome/reference-index/ref2.fa.fai', checkIfExists: true),
                        file(params.modules_testdata_base_path + '/genomics/tuberculosis/genome/reference-index/ref2.fa', checkIfExists: true)
                    ]))
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

}
