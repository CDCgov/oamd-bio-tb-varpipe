nextflow_process {

    name "Test Process SAMTOOLS_VIEW"
    script "../main.nf"
    process "SAMTOOLS_VIEW"

    tag "modules"
    tag "modules_phcore"
    tag "samtools"
    tag "samtools/view"

    test("bam") {

        when {
            process {
                """
                // Prepare input data
                input[0] = Channel.of([
                    [ id:'test', single_end:false ], // meta map
                    file(params.nfcore_modules_testdata_base_path + '/genomics/sarscov2/illumina/bam/test.paired_end.bam', checkIfExists: true),
                    []
                ])
                input[1] = [[],[]]
                input[2] = []
                input[3] = []
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("bam_stub") {

        options "-stub"
        config "./bam_index.config"

        when {
            process {
                """
                // Prepare input data
                input[0] = Channel.of([
                    [ id:'test', single_end:false ], // meta map
                    file(params.nfcore_modules_testdata_base_path + '/genomics/sarscov2/illumina/bam/test.paired_end.bam', checkIfExists: true),
                    []
                ])
                input[1] = [[],[]]
                input[2] = []
                input[3] = []
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }
}
